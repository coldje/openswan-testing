debugging mode enabled
Starting parse
Entering state 0
Reducing stack by rule 4 (line 102):
-> $$ = nterm blanklines ()
Stack now 0
Entering state 2
Reading a token: Next token is token CONN ()
Reducing stack by rule 7 (line 107):
-> $$ = nterm sections ()
Stack now 0 2
Entering state 8
Next token is token CONN ()
Shifting token CONN ()
Entering state 13
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 19
Reading a token: Next token is token EOL ()
Shifting token EOL ()
Entering state 22
Reducing stack by rule 11 (line 118):

read conn jukie--gimli
-> $$ = nterm @2 ()
Stack now 0 2 8 13 19 22
Entering state 25
Reducing stack by rule 15 (line 147):
-> $$ = nterm kw_sections ()
Stack now 0 2 8 13 19 22 25
Entering state 27
Reading a token: Next token is token FIRST_SPACES ()
Shifting token FIRST_SPACES ()
Entering state 28
Reading a token: STR/KEY: left
Next token is token KEYWORD ()
Shifting token KEYWORD ()
Entering state 31
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 36
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 42
Reducing stack by rule 18 (line 211):
   $1 = token KEYWORD ()
   $2 = token EQUAL ()
   $3 = token STRING ()
-> $$ = nterm statement_kw ()
Stack now 0 2 8 13 19 22 25 27 28
Entering state 34
Reading a token: Next token is token EOL ()
Shifting token EOL ()
Entering state 39
Reducing stack by rule 16 (line 150):
   $1 = token FIRST_SPACES ()
   $2 = nterm statement_kw ()
   $3 = token EOL ()
-> $$ = nterm kw_section ()
Stack now 0 2 8 13 19 22 25 27
Entering state 29
Reducing stack by rule 14 (line 146):
   $1 = nterm kw_sections ()
   $2 = nterm kw_section ()
-> $$ = nterm kw_sections ()
Stack now 0 2 8 13 19 22 25
Entering state 27
Reading a token: Next token is token FIRST_SPACES ()
Shifting token FIRST_SPACES ()
Entering state 28
Reading a token: STR/KEY: leftrsasigkey
Next token is token KEYWORD ()
Shifting token KEYWORD ()
Entering state 31
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 36
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 42
Reducing stack by rule 18 (line 211):
   $1 = token KEYWORD ()
   $2 = token EQUAL ()
   $3 = token STRING ()
-> $$ = nterm statement_kw ()
Stack now 0 2 8 13 19 22 25 27 28
Entering state 34
Reading a token: Next token is token EOL ()
Shifting token EOL ()
Entering state 39
Reducing stack by rule 16 (line 150):
   $1 = token FIRST_SPACES ()
   $2 = nterm statement_kw ()
   $3 = token EOL ()
-> $$ = nterm kw_section ()
Stack now 0 2 8 13 19 22 25 27
Entering state 29
Reducing stack by rule 14 (line 146):
   $1 = nterm kw_sections ()
   $2 = nterm kw_section ()
-> $$ = nterm kw_sections ()
Stack now 0 2 8 13 19 22 25
Entering state 27
Reading a token: Next token is token FIRST_SPACES ()
Shifting token FIRST_SPACES ()
Entering state 28
Reading a token: STR/KEY: right
Next token is token KEYWORD ()
Shifting token KEYWORD ()
Entering state 31
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 36
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 42
Reducing stack by rule 18 (line 211):
   $1 = token KEYWORD ()
   $2 = token EQUAL ()
   $3 = token STRING ()
-> $$ = nterm statement_kw ()
Stack now 0 2 8 13 19 22 25 27 28
Entering state 34
Reading a token: Next token is token EOL ()
Shifting token EOL ()
Entering state 39
Reducing stack by rule 16 (line 150):
   $1 = token FIRST_SPACES ()
   $2 = nterm statement_kw ()
   $3 = token EOL ()
-> $$ = nterm kw_section ()
Stack now 0 2 8 13 19 22 25 27
Entering state 29
Reducing stack by rule 14 (line 146):
   $1 = nterm kw_sections ()
   $2 = nterm kw_section ()
-> $$ = nterm kw_sections ()
Stack now 0 2 8 13 19 22 25
Entering state 27
Reading a token: Next token is token FIRST_SPACES ()
Shifting token FIRST_SPACES ()
Entering state 28
Reading a token: STR/KEY: rightrsasigkey
Next token is token KEYWORD ()
Shifting token KEYWORD ()
Entering state 31
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 36
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 42
Reducing stack by rule 18 (line 211):
   $1 = token KEYWORD ()
   $2 = token EQUAL ()
   $3 = token STRING ()
-> $$ = nterm statement_kw ()
Stack now 0 2 8 13 19 22 25 27 28
Entering state 34
Reading a token: Next token is token EOL ()
Shifting token EOL ()
Entering state 39
Reducing stack by rule 16 (line 150):
   $1 = token FIRST_SPACES ()
   $2 = nterm statement_kw ()
   $3 = token EOL ()
-> $$ = nterm kw_section ()
Stack now 0 2 8 13 19 22 25 27
Entering state 29
Reducing stack by rule 14 (line 146):
   $1 = nterm kw_sections ()
   $2 = nterm kw_section ()
-> $$ = nterm kw_sections ()
Stack now 0 2 8 13 19 22 25
Entering state 27
Reading a token: Next token is token FIRST_SPACES ()
Shifting token FIRST_SPACES ()
Entering state 28
Reading a token: STR/KEY: auto
Next token is token KEYWORD ()
Shifting token KEYWORD ()
Entering state 31
Reading a token: Next token is token EQUAL ()
Shifting token EQUAL ()
Entering state 36
Reading a token: Next token is token STRING ()
Shifting token STRING ()
Entering state 42
Reducing stack by rule 18 (line 211):
   $1 = token KEYWORD ()
   $2 = token EQUAL ()
   $3 = token STRING ()
-> $$ = nterm statement_kw ()
Stack now 0 2 8 13 19 22 25 27 28
Entering state 34
Reading a token: Next token is token EOL ()
Shifting token EOL ()
Entering state 39
Reducing stack by rule 16 (line 150):
   $1 = token FIRST_SPACES ()
   $2 = nterm statement_kw ()
   $3 = token EOL ()
-> $$ = nterm kw_section ()
Stack now 0 2 8 13 19 22 25 27
Entering state 29
Reducing stack by rule 14 (line 146):
   $1 = nterm kw_sections ()
   $2 = nterm kw_section ()
-> $$ = nterm kw_sections ()
Stack now 0 2 8 13 19 22 25
Entering state 27
Reading a token: end of file /osw/v2.5.00/testing/scripts/readwriteconf-12/gimli.conf, resuming <none> line -1
Now at end of input.
Reducing stack by rule 12 (line 118):
   $1 = token CONN ()
   $2 = token STRING ()
   $3 = token EOL ()
   $4 = nterm @2 ()
   $5 = nterm kw_sections ()
-> $$ = nterm section_or_include ()
Stack now 0 2 8
Entering state 15
Reducing stack by rule 8 (line 108):
   $1 = nterm sections ()
   $2 = nterm section_or_include ()
-> $$ = nterm sections ()
Stack now 0 2
Entering state 8
Now at end of input.
Reducing stack by rule 2 (line 78):
   $1 = nterm blanklines ()
   $2 = nterm sections ()
-> $$ = nterm config_file ()
Stack now 0
Entering state 1
Now at end of input.
Stack now 0 1
Cleanup: popping nterm config_file ()
Loading conn jukie--gimli
opening file: DIR/testing/scripts/readwriteconf-12/gimli.conf
#conn jukie--gimli loaded

version 2.0

config setup


# begin conn jukie--gimli
conn jukie--gimli
	left=4.5.6.7
	leftrsakey=0sAQOw4nEMI2GH1qEjXUr0pkR1wbtQSo3o5rs54fEXwptzNFI2tjEU2efPqp0X4OZmZ0v4ND4KHc13MepwvzAlbo/H7zaWC8q16vK5g9rG7LldGzYcdfQJyZ38yXi8R5rr//ZK3ZxkW+UGUTwIMtpEJcgFANB3T9QEGftviIJUf4CA8SPDHnYGHLqnI94jbpZpql0T5zI3enq+GKHwDc+GnCWg9g/zScide2acEpU5sVD4OQYsV3ACVLHHqQpsSt12XF8NJVRxtd1EJ/Oko0dtllC+tCUz+/tultycyjylg5ABj9jQHl+akQV8fF3Y81+WsGwIH//GHrtteQAKNgek5551rbh9EhMUKH/3EisJDSMQVII7
	right=1.2.3.4
	rightrsakey=0sAQOU0f6xF+/rx3kVuw+9vBKcgYQpTVYJw428eFjJrQOCKsSqVlYwRNGNDM7+LPmCSEj97QalpgsraYlmbHTSwAtatlDVZSZmhxB+QFHWFn6qNWK80cV3uA/pTXh6Nbarspixebd6OwoiYChpq+eGVKISkNaeZ7BJ9GMM0e+wpmaP+zXGTIW0H2j5TZKukDj78F6HzZYSC5y48fbC6az5AFsolWx9Rah2jDfv7ceWjzZHCMt+WOdvuTekp9ftuEbOGAIFkbRGEhUWilq1V9Hwcix8XwAs/JIuHuJXF0HL0JPmCHfEXhqcTkI5XKRcPK2fLxwo4TCVjJvpukOssROyb8gn5DFcAzbQrA5rrCkquXSEstxTppD7KdRZiFmjega5IDBZd8CqrzJqHSZwmeMcQRfnr4dtFTljSiKxCW1gzrUIh/dq2DPxmRKsgquYn1n8htIq6SoiJnJ9U+55gm5j0cMRwvXJnR1SbS+3bFs2ghc8g/yvK1Z3NLbMd1lexXMFiFSjjU7c/e3OIXiO8UGOFFFsRQYIXNAwGWxCDxckcsiSzdp9F7L6qRUaQ0i+S6KHTSfQStIrf55JMfhpRyA5sUxVv+0oe3e+stQlUp/RNLjBUdC8wrBiSq5t2rxUOzIFKcjscVlsdzq2x92HVwI3Z3OH7EpGvB1dIVfXyn4FdNU0Jw==
	auto=start
	type=tunnel
	compress=no
	pfs=yes
	rekey=yes
	authby=rsasig
	phase2=esp
# end conn jukie--gimli

# end of config

