55,62c55
< ../refineconnection leak: 6 * struct state in new_state()
< ../refineconnection leak: myid string
< ../refineconnection leak: my FQDN
< ../refineconnection leak: host_pair
< ../refineconnection leak: host ip
< ../refineconnection leak: keep id name
< ../refineconnection leak: host ip
< ../refineconnection leak: keep id name
---
> ../refineconnection leak: 2 * host ip
65,73d57
< ../refineconnection leak: policies path
< ../refineconnection leak: ocspcerts path
< ../refineconnection leak: aacerts path
< ../refineconnection leak: certs path
< ../refineconnection leak: private path
< ../refineconnection leak: crls path
< ../refineconnection leak: cacert path
< ../refineconnection leak: acert path
< ../refineconnection leak: 7 * default conf
3c3,6
< Pre-amble: #!-pluto-whack-file- recorded on east on 2007-07-04 01:12:06
---
> | interface "eth0" matched right side
> ../refineconnection added connection description "westnet-eastnet"
> | base debugging = crypt+control+controlmore
> Pre-amble: #!-pluto-whack-file- recorded on east on 2007-07-01 00:48:03
5c8,69
< ../refineconnection got 0 transforms for ike="(null)"
---
> ../refineconnection listening for IKE messages
> | creating state object #1 at 0x401f5c10
> | refine_connection: starting with westnet-eastnet
> |    match_id a=@west
> |             b=@west
> |    results  matched
> |   trusted_ca called with a=(empty) b=(empty)
> | refine_connection: checking westnet-eastnet against westnet-eastnet, best=(none) with match=1(id=1/ca=1/reqca=1)
> | refine_connection: checked westnet-eastnet against westnet-eastnet, now for see if best
> | creating state object #2 at 0x401f7c10
> | refine_connection: starting with westnet-eastnet
> |    match_id a=@west
> |             b=@west
> |    results  matched
> |   trusted_ca called with a=(empty) b=(empty)
> | refine_connection: checking westnet-eastnet against westnet-eastnet, best=(none) with match=1(id=1/ca=1/reqca=1)
> | refine_connection: checked westnet-eastnet against westnet-eastnet, now for see if best
> | creating state object #3 at 0x401f9c10
> | refine_connection: starting with westnet-eastnet
> |    match_id a=@west
> |             b=@west
> |    results  matched
> |   trusted_ca called with a=(empty) b=(empty)
> | refine_connection: checking westnet-eastnet against westnet-eastnet, best=(none) with match=1(id=1/ca=1/reqca=1)
> | find_host_pair: comparing to 192.1.2.23:500 192.1.2.45:500 
> | find_host_pair_conn (refine_host_connection): 192.1.2.23:500 %any:500 -> hp:none 
> | creating state object #4 at 0x401fbc10
> | refine_connection: starting with westnet-eastnet
> |    match_id a=@west
> |             b=@west
> |    results  matched
> |   trusted_ca called with a=(empty) b=(empty)
> | refine_connection: checking westnet-eastnet against westnet-eastnet, best=(none) with match=1(id=1/ca=1/reqca=1)
> | find_host_pair: comparing to 192.1.2.23:500 192.1.2.45:500 
> | find_host_pair_conn (refine_host_connection): 192.1.2.23:500 %any:500 -> hp:none 
> | creating state object #5 at 0x401fdc10
> | refine_connection: starting with westnet-eastnet
> |    match_id a=@east
> |             b=@west
> |    results  fail
> |   trusted_ca called with a=(empty) b=(empty)
> | refine_connection: checking westnet-eastnet against westnet-eastnet, best=(none) with match=0(id=0/ca=1/reqca=1)
> | find_host_pair: comparing to 192.1.2.23:500 192.1.2.45:500 
> | find_host_pair_conn (refine_host_connection): 192.1.2.23:500 %any:500 -> hp:none 
> | creating state object #6 at 0x401ffc10
> | refine_connection: starting with westnet-eastnet
> |    match_id a=@east
> |             b=@west
> |    results  fail
> |   trusted_ca called with a=(empty) b=(empty)
> | refine_connection: checking westnet-eastnet against westnet-eastnet, best=(none) with match=0(id=0/ca=1/reqca=1)
> | find_host_pair: comparing to 192.1.2.23:500 192.1.2.45:500 
> | find_host_pair_conn (refine_host_connection): 192.1.2.23:500 %any:500 -> hp:none 
> ../refineconnection leak: 2 * host ip
> ../refineconnection leak: connection name
> ../refineconnection leak: struct connection
> 1: @west -> conn: westnet-eastnet
> 2: @west -> conn: westnet-eastnet
> 3: @west -> conn: <none>
> 4: @west -> conn: <none>
> 5: @east -> conn: <none>
> 6: @east -> conn: <none>
